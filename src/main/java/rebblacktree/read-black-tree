红黑树

1.红黑树和23树的等价性
23tree
        2节点                    3节点                                                             临时4节点 ---> 会分裂成三个2节点（对应到红黑树中，就是三个黑色的节点，所以需要变换颜色）
         ---                   --- ---                                                          --- --- ---
        | a |                 | b | c |                                                        | d | e | f |
         ---                   --- ---                                                          --- --- ---
red-black-tree
         ---                      ---                                                               ---
        | a |                    | c |  black                                                      | e |  black
         ---                      ---                                                               ---
        black               ---                                                               ---          ---
                           | b |  red（所有红色的节点一定都是向左倾斜的）                     red  | d |        | f |   red
                            ---                                                               ---          ---



2.红黑树定义
1）每个节点或者是红色的，或者是黑色的（对应到二三树，要么是2节点，要么是3节点）
2）根节点是黑色的（对应到二三树，二三树根节点要么是2节点，要么是3节点，根据对应关系得到，红黑树根节点一定是黑色的）
3）每一个叶子节点（最后的空节点）是黑色的（红黑树的定义）
4）如果一个节点本身是红色的，那么它的孩子节点都是黑色的（对应到二三树中，3节点才会出现红色的节点，红色节点的孩子节点对应是3节点的左孩子或者中间孩子，它们要么是一个3节点，要么是个2节点）
5）从任意一个节点出发到叶子节点，经过的黑色节点是一样多的（23树是一根绝对平衡的树，从23树中人任意一个节点出发到叶子节点经过的节点数量都一样，对应到红黑树中就是走过的黑色节点数量是一样的，因为不管是2节点还是3节点都会对应有一个黑色节点）

红黑树是保持"黑平衡"的二叉树（从根节点开始搜索一直到任意一个叶子节点，所经历的黑色节点是一样多的，黑色的绝对平衡）
最大高度: 2logn

3.红黑树的添加操作
新添加的节点都是红色的

红色节点表示它和它父节点是融合在一起的

保持根节点是黑色的
在23树的添加过程中，3节点添加元素之后，都需要向上融合一个元素，这个元素所在的节点在红黑树的表示中应该是红色的节点，直到它融合到了根节点
需要向上融合的根节点为红色，而其左右孩子应该是黑色的


4.优劣
由于红黑树是黑平衡的，最大高度是2logn，所以查询性能要差于AVL树
但是红黑树插入删除节点要更优，少了一部分的旋转操作
红黑树统计性能更优